// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentVaccinationBackenAPI.Model;

#nullable disable

namespace StudentVaccinationBackendAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250425124247_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.StudentVaccinationDetail", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.Property<string>("VaccinationId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateVaccinated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.HasKey("StudentId", "VaccinationId");

                    b.HasIndex("VaccinationId");

                    b.ToTable("StudentVaccinationDetail");
                });

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.VaccinationSchedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClassApplicable")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NoOfDose")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VaccinationSchedules");
                });

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.StudentVaccinationDetail", b =>
                {
                    b.HasOne("StudentVaccinationBackenAPI.Model.Student", "Student")
                        .WithMany("StudentVaccinationDetails")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentVaccinationBackenAPI.Model.VaccinationSchedule", "VaccinationSchedule")
                        .WithMany("StudentVaccinationDetails")
                        .HasForeignKey("VaccinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("VaccinationSchedule");
                });

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.Student", b =>
                {
                    b.Navigation("StudentVaccinationDetails");
                });

            modelBuilder.Entity("StudentVaccinationBackenAPI.Model.VaccinationSchedule", b =>
                {
                    b.Navigation("StudentVaccinationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
